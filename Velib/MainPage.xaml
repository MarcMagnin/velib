<Page
    x:Class="Velib.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Velib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:Velib.Data"
	xmlns:controls="using:Velib.VelibContext"
    xmlns:Maps="using:Windows.UI.Xaml.Controls.Maps"
    mc:Ignorable="d" 
	FontFamily="Global User Interface" 
	
	Width="Auto" 
	Height="Auto" Margin="0">

    <Page.Resources>
        
       
        <!--POIs-->
		      <ControlTemplate x:Key="VelibTemplate">
            <!--Maps:MapControl.NormalizedAnchorPoint="0.5,0"-->
            <Canvas x:Name="VelibTemplateStationRootCanvas" Height="20" 
				
			
				Width="20" RenderTransformOrigin="0,0" CacheMode="BitmapCache" ManipulationMode="All" ManipulationStarting="VelibTemplateStationRootCanvas_ManipulationStarting" >
                <Canvas.RenderTransform>
                    <CompositeTransform/>
                </Canvas.RenderTransform>


                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="VisualStateGroup">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0"/>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal">
                    		<Storyboard>
                        		<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                        		<DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image" d:IsOptimized="True"/>
                        		<DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                        	</Storyboard>
                    	</VisualState>
                        <VisualState x:Name="ShowGreenVelib">
                        	<Storyboard>
                        		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path_Copy" d:IsOptimized="True"/>
                        	</Storyboard>
                        </VisualState>
                        <VisualState x:Name="ShowCluster">
                        	<Storyboard>
                        		<DoubleAnimation Duration="0" To="1.3" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                        		<DoubleAnimation Duration="0" To="1.3" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                        		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Top)" Storyboard.TargetName="path">
                        			<DiscreteObjectKeyFrame KeyTime="0">
                        				<DiscreteObjectKeyFrame.Value>
                        					<x:Double>-55</x:Double>
                        				</DiscreteObjectKeyFrame.Value>
                        			</DiscreteObjectKeyFrame>
                        		</ObjectAnimationUsingKeyFrames>
                        		<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                        		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlockClusterNumber" d:IsOptimized="True"/>
                        	</Storyboard>
                        </VisualState>
                        <VisualState x:Name="ShowOrangeVelib">
                        	<Storyboard>
                        		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path_Copy1" d:IsOptimized="True"/>
                        	</Storyboard>
                        </VisualState>
                        <VisualState x:Name="ShowRedVelib">
                        	<Storyboard>
                        		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path_Copy2" d:IsOptimized="True"/>
                        	</Storyboard>
                        </VisualState>
                       
                    
						 
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="VisualStateGroup1">
					 <VisualState x:Name="Hide">
                        	<Storyboard>
					 		<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VelibTemplateStationRootCanvas" d:IsOptimized="True"/>
					 		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="VelibTemplateStationRootCanvas">
					 			<DiscreteObjectKeyFrame KeyTime="0">
					 				<DiscreteObjectKeyFrame.Value>
					 					<x:Boolean>False</x:Boolean>
					 				</DiscreteObjectKeyFrame.Value>
					 			</DiscreteObjectKeyFrame>
					 		</ObjectAnimationUsingKeyFrames>
					 	</Storyboard>
                        </VisualState>
                    	<VisualState x:Name="Loaded">
                    		<Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="VelibTemplateStationRootCanvas">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <BackEase EasingMode="EaseOut" Amplitude="0.4"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="VelibTemplateStationRootCanvas">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <BackEase EasingMode="EaseOut" Amplitude="0.4"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard></VisualState>
                    	<VisualState x:Name="Clear"/>
                    	<VisualState x:Name="Click">
                    		<Storyboard>
                    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="VelibTemplateStationRootCanvas">
                    				<EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0.7">
                    					<EasingDoubleKeyFrame.EasingFunction>
                    						<CircleEase EasingMode="EaseOut"/>
                    					</EasingDoubleKeyFrame.EasingFunction>
                    				</EasingDoubleKeyFrame>
                    				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                    					<EasingDoubleKeyFrame.EasingFunction>
                    						<BackEase EasingMode="EaseOut" Amplitude="0.5"/>
                    					</EasingDoubleKeyFrame.EasingFunction>
                    				</EasingDoubleKeyFrame>
                    			</DoubleAnimationUsingKeyFrames>
                    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="VelibTemplateStationRootCanvas">
                    				<EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0.7">
                    					<EasingDoubleKeyFrame.EasingFunction>
                    						<CircleEase EasingMode="EaseOut"/>
                    					</EasingDoubleKeyFrame.EasingFunction>
                    				</EasingDoubleKeyFrame>
                    				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                    					<EasingDoubleKeyFrame.EasingFunction>
                    						<BackEase EasingMode="EaseOut" Amplitude="0.5"/>
                    					</EasingDoubleKeyFrame.EasingFunction>
                    				</EasingDoubleKeyFrame>
                    			</DoubleAnimationUsingKeyFrames>
                    		</Storyboard>
                    	</VisualState>
                    	
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="VisualStateGroup2">
                    	<VisualStateGroup.Transitions>
                    		<VisualTransition GeneratedDuration="0"/>
                    	</VisualStateGroup.Transitions>
                    	<VisualState x:Name="ShowSelected"/>
                    	<VisualState x:Name="HideSelected"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>


                <!--<Grid Visibility="{Binding SelectedFlagVisibility}" IsHitTestVisible="False" Height="30" Canvas.Left="42" Canvas.Top="-10" >
                <Ellipse Fill="Black" Stroke="#FF09C203" Margin="0" StrokeThickness="3"/>
                <TextBlock Height="30" 
        			Text="{Binding pa}" VerticalAlignment="Center" 
                    Foreground="{StaticResource PhoneAccentBrush}" Margin="6,3,6,0" HorizontalAlignment="Center"  />
            </Grid>-->



                <Image x:Name="image" Height="10" Width="32" Source="Assets/ombre.png" Canvas.Top="-5" Canvas.Left="-16" Opacity="0.6"/>
                <Path x:Name="path" Data="M89.9999,1 C94.8623,1 99.7249,2.85498 103.435,6.56496 C110.043,13.1734 110.059,24.1457 104.896,31.554 L103.435,33.4349 L89.9999,46.87 L76.2225,33.0838 C69.1468,25.6402 69.261,13.869 76.5649,6.56496 C80.2749,2.85498 85.1374,1 89.9999,1 z" Fill="#FF9B9B9B" Height="47.87" Stretch="Fill" Canvas.Top="-47" UseLayoutRounding="False" Width="40" RenderTransformOrigin="0.5,0.5" Canvas.Left="-20.25">
                	<Path.RenderTransform>
                		<CompositeTransform/>
                	</Path.RenderTransform>
                </Path>
				  
				
<!--<Grid Visibility="{Binding SelectedFlagVisibility}" IsHitTestVisible="False" Height="30" Canvas.Left="42" Canvas.Top="-10" >
                <Ellipse Fill="Black" Stroke="#FF09C203" Margin="0" StrokeThickness="3"/>
                <TextBlock Height="30" 
        			Text="{Binding pa}" VerticalAlignment="Center" 
                    Foreground="{StaticResource PhoneAccentBrush}" Margin="6,3,6,0" HorizontalAlignment="Center"  />
            </Grid>-->
            	<Path x:Name="path_Copy" Data="M89.9999,1 C94.8623,1 99.7249,2.85498 103.435,6.56496 C110.043,13.1734 110.059,24.1457 104.896,31.554 L103.435,33.4349 L89.9999,46.87 L76.2225,33.0838 C69.1468,25.6402 69.261,13.869 76.5649,6.56496 C80.2749,2.85498 85.1374,1 89.9999,1 z" Fill="#FF5ECF00" Height="47.87" Stretch="Fill" Canvas.Top="-47" UseLayoutRounding="False" Width="40" RenderTransformOrigin="0.5,0.5" Canvas.Left="-20.25" Opacity="0">
            		<Path.RenderTransform>
            			<CompositeTransform/>
            		</Path.RenderTransform>
            	</Path>
            	<Path x:Name="path_Copy1" Data="M89.9999,1 C94.8623,1 99.7249,2.85498 103.435,6.56496 C110.043,13.1734 110.059,24.1457 104.896,31.554 L103.435,33.4349 L89.9999,46.87 L76.2225,33.0838 C69.1468,25.6402 69.261,13.869 76.5649,6.56496 C80.2749,2.85498 85.1374,1 89.9999,1 z" Fill="#FFF5BE00" Height="47.87" Stretch="Fill" Canvas.Top="-47" UseLayoutRounding="False" Width="40" RenderTransformOrigin="0.5,0.5" Canvas.Left="-20.25" Opacity="0">
            		<Path.RenderTransform>
            			<CompositeTransform/>
            		</Path.RenderTransform>
            	</Path>
            	<Path x:Name="path_Copy2" Data="M89.9999,1 C94.8623,1 99.7249,2.85498 103.435,6.56496 C110.043,13.1734 110.059,24.1457 104.896,31.554 L103.435,33.4349 L89.9999,46.87 L76.2225,33.0838 C69.1468,25.6402 69.261,13.869 76.5649,6.56496 C80.2749,2.85498 85.1374,1 89.9999,1 z" Fill="#FFD15122" Height="47.87" Stretch="Fill" Canvas.Top="-47" UseLayoutRounding="False" Width="40" RenderTransformOrigin="0.5,0.5" Canvas.Left="-20.25" Opacity="0">
            		<Path.RenderTransform>
            			<CompositeTransform/>
            		</Path.RenderTransform>
            	</Path>
				<TextBlock x:Name="Arrow" Text="&#xE0AB;" FontSize="64" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Segoe UI Symbol" Canvas.Left="-27" Canvas.Top="-72" IsHitTestVisible="False" Foreground="Black" Visibility="Collapsed"/>
               
                
<!--Binding AvailableBikesStr}-->
            	<TextBlock x:Name="textBlock" Text="{Binding AvailableStr}" 
            		VerticalAlignment="Center" 
            		FontSize="16" 
            		FontWeight="Bold" 
            		TextAlignment="Center" 
            		Canvas.Left="-11" Canvas.Top="-35" Width="23" 
            		IsColorFontEnabled="False" 
            		IsHitTestVisible="False" Foreground="Black" RenderTransformOrigin="0.5,0.5" 
				>
            		<TextBlock.RenderTransform>
            			<CompositeTransform/>
            		</TextBlock.RenderTransform>
            	</TextBlock>
				<TextBlock x:Name="textBlockClusterNumber" 
            		VerticalAlignment="Center" 
            		FontSize="24" 
            		FontWeight="Bold" 
            		TextAlignment="Center" 
            		Canvas.Left="-17" Canvas.Top="-48" Width="34" 
            		IsColorFontEnabled="False" 
            		IsHitTestVisible="False" Foreground="White" Opacity="0" 
				/>


             
            	<Grid x:Name="stackPanel" HorizontalAlignment="Left" Background="#7F000000" Canvas.Left="-100" Canvas.Top="-80" MinWidth="100" RenderTransformOrigin="0.5,0.5" Height="74" Width="200" Margin="0" Visibility="Collapsed">
            		<Grid.ColumnDefinitions>
            			<ColumnDefinition Width="Auto"/>
            			<ColumnDefinition Width="*"/>
            			<ColumnDefinition Width="Auto"/>
            		</Grid.ColumnDefinitions>
            		<Grid.RenderTransform>
            			<CompositeTransform/>
            		</Grid.RenderTransform>
            		<!--Source="Assets/WP8AppbarIcons/audio.png"-->
                  
            		<RichTextBlock Grid.Column="1" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" HorizontalAlignment="Left" IsTextSelectionEnabled="False" IsColorFontEnabled="False" Margin="3,3,0,3">
            			<Paragraph>
            				<Run  FontSize="10"/>
            			</Paragraph>
            			<Paragraph>
            				<Run Text="Vélos disponibles :"  FontSize="12"/>
            				<Run  FontSize="15"/>
            			</Paragraph>
            		</RichTextBlock>
            		<Rectangle VerticalAlignment="Center" Height="45" Width="45" HorizontalAlignment="Center" Grid.Column="3" Fill="White" Margin="3"/>
            		<Path Data="M28.6295,13.5002 L44.2042,13.5002 L36.4169,21.2875 z" Stretch="Fill" UseLayoutRounding="False" Fill="#7F000000" Margin="91.856,73.993,41.311,-9.121" Grid.Column="1" Width="16"/>
            	</Grid>



            </Canvas>
        </ControlTemplate>
		<Storyboard x:Key="NorthIndicatorStoryboard">
    		<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="NorthIndicator" d:IsOptimized="True"/>		
		</Storyboard>
		<Storyboard x:Key="UserLocationStoryboard">
		<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="UserLocation" d:IsOptimized="True">
		<!--<DoubleAnimation.EasingFunction>
    							<SineEase EasingMode="EaseOut"/>
    						</DoubleAnimation.EasingFunction>-->
		</DoubleAnimation>							
		</Storyboard>
		<ControlTemplate x:Key="ClusterTemplate">
            <!--Maps:MapControl.NormalizedAnchorPoint="0.5,0"-->
            <Canvas x:Name="rootCanvas" Height="20" 
				
			
				Width="20" RenderTransformOrigin="0.5,0.5">
                <Canvas.RenderTransform>
                    <CompositeTransform/>
                </Canvas.RenderTransform>


                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="VisualStateGroup">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0"/>
                            <VisualTransition From="Selected" GeneratedDuration="0:0:0.2">
                                <VisualTransition.GeneratedEasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </VisualTransition.GeneratedEasingFunction>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="Selected">
                            <Storyboard>
                               
                        		<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="path" />
                        		<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="path" />
                                
                        		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="stackPanel">
                        			<DiscreteObjectKeyFrame KeyTime="0">
                        				<DiscreteObjectKeyFrame.Value>
                        					<Visibility>Visible</Visibility>
                        				</DiscreteObjectKeyFrame.Value>
                        			</DiscreteObjectKeyFrame>
                        		</ObjectAnimationUsingKeyFrames>
                        		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="stackPanel">
                        			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        			<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                        				<EasingDoubleKeyFrame.EasingFunction>
                        					<BackEase EasingMode="EaseOut" Amplitude="0.4"/>
                        				</EasingDoubleKeyFrame.EasingFunction>
                        			</EasingDoubleKeyFrame>
                        		</DoubleAnimationUsingKeyFrames>
                        		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="stackPanel">
                        			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        			<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                        				<EasingDoubleKeyFrame.EasingFunction>
                        					<BackEase EasingMode="EaseOut" Amplitude="0.4"/>
                        				</EasingDoubleKeyFrame.EasingFunction>
                        			</EasingDoubleKeyFrame>
                        		</DoubleAnimationUsingKeyFrames>
                        		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel">
                        			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        			<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                        		</DoubleAnimationUsingKeyFrames>
                        	</Storyboard>
                        </VisualState>
                        <VisualState x:Name="Loaded">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="rootCanvas">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <BackEase EasingMode="EaseOut" Amplitude="0.4"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="rootCanvas">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <BackEase EasingMode="EaseOut" Amplitude="0.4"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rootCanvas">
                                	<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                	<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="BeforeLoaded">
                        	<Storyboard>
                        		<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rootCanvas" />
                        	</Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>


                <!--<Grid Visibility="{Binding SelectedFlagVisibility}" IsHitTestVisible="False" Height="30" Canvas.Left="42" Canvas.Top="-10" >
                <Ellipse Fill="Black" Stroke="#FF09C203" Margin="0" StrokeThickness="3"/>
                <TextBlock Height="30" 
        			Text="{Binding pa}" VerticalAlignment="Center" 
                    Foreground="{StaticResource PhoneAccentBrush}" Margin="6,3,6,0" HorizontalAlignment="Center"  />
            </Grid>-->



                <Path x:Name="path" Data="M89.9999,1 C94.8623,1 99.7249,2.85498 103.435,6.56496 C110.043,13.1734 110.059,24.1457 104.896,31.554 L103.435,33.4349 L89.9999,46.87 L76.2225,33.0838 C69.1468,25.6402 69.261,13.869 76.5649,6.56496 C80.2749,2.85498 85.1374,1 89.9999,1 z" Fill="#4C000000" Height="47.87" Stretch="Fill" Stroke="Black" StrokeThickness="2" Canvas.Top="-47" UseLayoutRounding="False" Width="40" RenderTransformOrigin="0.5,0.5" Canvas.Left="-20.25">
                    <Path.RenderTransform>
                        <CompositeTransform/>
                    </Path.RenderTransform>
                </Path>
                <Grid Height="30" Width="30" Canvas.Left="-15" Canvas.Top="-42">
                	<TextBlock Text="{Binding count}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" FontWeight="Bold" TextAlignment="Center"/>
                </Grid>



             
                <Grid x:Name="stackPanel" HorizontalAlignment="Left" Background="#7F000000" Canvas.Left="-100" Canvas.Top="-80" MinWidth="100" RenderTransformOrigin="0.5,0.5" Height="74" Width="200" Margin="0" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RenderTransform>
                        <CompositeTransform/>
                    </Grid.RenderTransform>
                    <!--Source="Assets/WP8AppbarIcons/audio.png"-->
                  
                    <RichTextBlock Grid.Column="1" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" HorizontalAlignment="Left" IsTextSelectionEnabled="False" IsColorFontEnabled="False" Margin="3,3,0,3">
                         <Paragraph>
                            <Run Text="{Binding Address}"  FontSize="10"/>
                        </Paragraph>
						  <Paragraph>
						  <Run Text="Vélos disponibles :"  FontSize="12"/>
							<Run Text="{Binding AvailableBikesStr}"  FontSize="15"/>
                        </Paragraph>
                    </RichTextBlock>
                    <Rectangle VerticalAlignment="Center" Height="45" Width="45" HorizontalAlignment="Center" Grid.Column="3" Fill="White" Margin="3"/>
                    <Path Data="M28.6295,13.5002 L44.2042,13.5002 L36.4169,21.2875 z" Stretch="Fill" UseLayoutRounding="False" Fill="#7F000000" Margin="91.856,73.993,41.311,-9.121" Grid.Column="1" Width="16"/>
                </Grid>



            </Canvas>
        </ControlTemplate>

        <DataTemplate x:Key="EventPoiTemplate" >

            <!--<controls:VelibControl Template="{StaticResource VelibTemplate}" Tapped="VelibTapped" />-->
            <!--<StackPanel Background="Black"
            
            Tapped="EventTapped">
                <TextBlock Maps:MapControl.Location="{Binding Location}" 
                                       Text="{Binding Name}" 
                                        FontSize="20" Margin="5"/>
            </StackPanel>-->

        </DataTemplate>
        <SolidColorBrush x:Key="PhoneRadioCheckBoxBrush" Color="Transparent"/>
        <x:Double x:Key="TextStyleLargeFontSize">18.14</x:Double>
        <FontFamily x:Key="PhoneFontFamilyNormal">Segoe WP</FontFamily>
        <Thickness x:Key="CheckBoxAndRadioButtonTextPaddingThickness">8,0,0,0</Thickness>
        <x:Double x:Key="CheckBoxAndRadioButtonMinWidthSize">168</x:Double>
        <x:Double x:Key="PhoneStrokeThickness">2.5</x:Double>
        <Thickness x:Key="PhoneTouchTargetLargeOverhang">0,16</Thickness>
        <Style x:Key="RadioButtonStyle1" TargetType="RadioButton">
        	<Setter Property="Background" Value="{ThemeResource PhoneRadioCheckBoxBrush}"/>
        	<Setter Property="BorderBrush" Value="{ThemeResource PhoneRadioCheckBoxBorderBrush}"/>
        	<Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
        	<Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
        	<Setter Property="HorizontalContentAlignment" Value="Left"/>
        	<Setter Property="VerticalContentAlignment" Value="Top"/>
        	<Setter Property="HorizontalAlignment" Value="Left"/>
        	<Setter Property="VerticalAlignment" Value="Top"/>
        	<Setter Property="Padding" Value="{ThemeResource CheckBoxAndRadioButtonTextPaddingThickness}"/>
        	<Setter Property="MinWidth" Value="{ThemeResource CheckBoxAndRadioButtonMinWidthSize}"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="RadioButton">
        				<Grid Background="Transparent" ScrollViewer.VerticalScrollBarVisibility="Disabled">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="MouseOver"/>
        							<VisualState x:Name="PointerOver"/>
        							<VisualState x:Name="Pressed">
        								<Storyboard>
        									<PointerDownThemeAnimation Storyboard.TargetName="Container"/>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckBackground">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckMark">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="CheckBackground">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckMark">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="CheckStates">
        							<VisualState x:Name="Checked">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckBackground" d:IsOptimized="True"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Unchecked"/>
        							<VisualState x:Name="Indeterminate"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Grid x:Name="Container" Margin="10">
        						<Grid.ColumnDefinitions>
        							<ColumnDefinition Width="*"/>
        							<ColumnDefinition Width="Auto"/>
        						</Grid.ColumnDefinitions>
        						<Grid>
        							<Ellipse x:Name="CheckBackground" Fill="{TemplateBinding Background}" IsHitTestVisible="False" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{ThemeResource PhoneStrokeThickness}" Opacity="0.45"/>
        							<Ellipse x:Name="CheckMark" Fill="{ThemeResource PhoneRadioCheckBoxCheckBrush}" HorizontalAlignment="Center" Height="12.5" IsHitTestVisible="False" Visibility="Collapsed" VerticalAlignment="Center" Width="12.5"/>
        							<ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="Center" VerticalAlignment="Center" />
        						
        							
        						</Grid>
        					</Grid>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Thickness x:Key="PhoneBorderThickness">2.5</Thickness>
        <FontWeight x:Key="PhoneButtonFontWeight">Semibold</FontWeight>
        <x:Double x:Key="PhoneButtonMinHeight">57.5</x:Double>
        <x:Double x:Key="PhoneButtonMinWidth">109</x:Double>
        <Thickness x:Key="PhoneTouchTargetOverhang">0,9.5</Thickness>
        <Style x:Key="ToggleButtonStyle1" TargetType="ToggleButton">
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="BorderBrush" Value="{ThemeResource PhoneForegroundBrush}"/>
        	<Setter Property="Foreground" Value="{ThemeResource PhoneForegroundBrush}"/>
        	<Setter Property="BorderThickness" Value="{ThemeResource PhoneBorderThickness}"/>
        	<Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
        	<Setter Property="FontWeight" Value="{ThemeResource PhoneButtonFontWeight}"/>
        	<Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
        	<Setter Property="Padding" Value="9.5,0"/>
        	<Setter Property="MinHeight" Value="{ThemeResource PhoneButtonMinHeight}"/>
        	
        	<Setter Property="HorizontalAlignment" Value="Left"/>
        	<Setter Property="VerticalAlignment" Value="Center"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="ToggleButton">
        				<Grid Background="Transparent" Height="40">
        					<Grid.ColumnDefinitions>
        						<ColumnDefinition Width="*"/>
        						<ColumnDefinition Width="*"/>
        					</Grid.ColumnDefinitions>
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckBackground" d:IsOptimized="True"/>
        									<DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckBackground1" d:IsOptimized="True"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="PointerOver"/>
        							<VisualState x:Name="Pressed"/>
        							<VisualState x:Name="Disabled"/>
        							<VisualState x:Name="Checked">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckBackground1" d:IsOptimized="True"/>
        									<DoubleAnimation Duration="0" To="0.345" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckBackground" d:IsOptimized="True"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="CheckedPointerOver"/>
        							<VisualState x:Name="CheckedPressed"/>
        							<VisualState x:Name="CheckedDisabled"/>
        							<VisualState x:Name="Indeterminate"/>
        							<VisualState x:Name="IndeterminatePointerOver"/>
        							<VisualState x:Name="IndeterminatePressed"/>
        							<VisualState x:Name="IndeterminateDisabled"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
							<Ellipse x:Name="CheckBackground" Fill="{TemplateBinding Background}" IsHitTestVisible="False" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{ThemeResource PhoneStrokeThickness}" Opacity="0.995" Width="40"/>
        					<Image Source="Assets/velo.png" Width="26"/>
        					<Ellipse x:Name="CheckBackground1" Fill="{TemplateBinding Background}" IsHitTestVisible="False" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{ThemeResource PhoneStrokeThickness}" Opacity="0.45" Grid.Column="1" Width="40" Margin="7,0,0,0"/>
        					<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="P" VerticalAlignment="Center" Foreground="White" FontSize="26.667" FontFamily="Global User Interface" FontWeight="Bold" Grid.ColumnSpan="2" Grid.Column="1" Margin="8,0,0,-1"/>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <SolidColorBrush x:Key="ButtonDisabledBackgroundThemeBrush" Color="Transparent"/>
       
        <Style x:Key="ButtonStyleLeftAlign" TargetType="Button">
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="BorderBrush" Value="{ThemeResource PhoneForegroundBrush}"/>
        	<Setter Property="Foreground" Value="{ThemeResource PhoneForegroundBrush}"/>
        	<Setter Property="BorderThickness" Value="{ThemeResource PhoneBorderThickness}"/>
        	<Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
        	<Setter Property="FontWeight" Value="{ThemeResource PhoneButtonFontWeight}"/>
        	<Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
        	<Setter Property="HorizontalAlignment" Value="Left"/>
        	<Setter Property="VerticalAlignment" Value="Center"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="Button">
        				<Grid x:Name="Grid" Background="Transparent">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualStateGroup.Transitions>
        								<VisualTransition From="Pressed" To="PointerOver">
        									<Storyboard>
        										<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
        									</Storyboard>
        								</VisualTransition>
        								<VisualTransition From="PointerOver" To="Normal">
        									<Storyboard>
        										<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
        									</Storyboard>
        								</VisualTransition>
        								<VisualTransition From="Pressed" To="Normal">
        									<Storyboard>
        										<PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
        									</Storyboard>
        								</VisualTransition>
        							</VisualStateGroup.Transitions>
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="PointerOver"/>
        							<VisualState x:Name="Pressed">
        								<Storyboard>
        									<PointerDownThemeAnimation Storyboard.TargetName="Grid"/>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
        						<ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10,20"/>
        					</Border>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
		
		<SolidColorBrush x:Key="FlyoutBackgroundThemeBrushLowOpacity" Opacity="0.8" 
		Color="{Binding Path=Color, Source={StaticResource FlyoutBackgroundThemeBrush}}"/>

		<!-- Default style for Windows.UI.Xaml.Controls.FlyoutPresenter -->
<Style x:Key="FlyoutPresenterStyle1" TargetType="FlyoutPresenter">

	<Setter Property="Background" Value="{StaticResource FlyoutBackgroundThemeBrushLowOpacity}"/>
	
	
	

</Style>
    </Page.Resources>
	<Page.BottomAppBar>
		<CommandBar MinHeight="25">
			<CommandBar.SecondaryCommands>
				<AppBarButton Icon="Download" Label="download cities" 
					Click="DownloadCitiesButton_Click"/>
				<AppBarButton Label="about"/>
			</CommandBar.SecondaryCommands>
			<AppBarButton x:Name="FavoritsButton"  Label="Favorites" Icon="Favorite" Click="FavoritsButton_Click"/>
			<AppBarButton x:Name="LocationButton" Click="AppBarButton_Click" Label="Location" Icon="Target" FontFamily="Global User Interface"/>
			<AppBarButton x:Name="SearchButton" Click="SearchButton_Click" Label="Search" Icon="Find"/>
		</CommandBar>
	</Page.BottomAppBar>

    <Grid x:Name="LayoutRoot" Margin="0" Background="{x:Null}" Visibility="Visible">
    	<FlyoutBase.AttachedFlyout>
    		<Flyout x:Name="VelibFlyout"  d:IsHidden="True" FlyoutPresenterStyle="{StaticResource FlyoutPresenterStyle1}">
					
					<StackPanel>
					<Button HorizontalAlignment="Stretch" Click="FlyoutButtonDriveTo_Click" Style="{StaticResource ButtonStyleLeftAlign}">
					
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="80"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<TextBlock HorizontalAlignment="Left" 
						TextWrapping="Wrap" 
						Text="&#xE102;"
						VerticalAlignment="Center" 
						FontFamily="Segoe UI Symbol" 
						FontSize="32" Margin="15,0"
						/>
						<StackPanel Grid.Column="2" Margin="0">
							<TextBlock Text="Drive to" FontSize="{StaticResource TextStyleExtraLargeFontSize}"/>
							<TextBlock Text="Start a driving app" FontSize="{StaticResource TextStyleLargeFontSize}" Style="{StaticResource ListViewItemSubheaderTextBlockStyle}"/>

						</StackPanel>
						</Grid>
					</Button>
					
					<Button HorizontalAlignment="Stretch" Click="FlyoutButtonAddFavorit_Click" Style="{StaticResource ButtonStyleLeftAlign}">
					
						<Button.Flyout>
							<Flyout x:Name="FavoriteFlyout" FlyoutPresenterStyle="{StaticResource FlyoutPresenterStyle1}" d:IsHidden="True">
							
							<StackPanel>
							<TextBlock
								Style="{StaticResource FlyoutPickerTitleTextBlockStyle}" FontFamily="Global User Interface" Margin="0,19,0,10" FontSize="24">
								<Run Text="Type a name"/>

							
							</TextBlock>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<TextBox x:Name="FavoriteNameTextBox" 
								
									CharacterSpacing="{ThemeResource PivotHeaderItemCharacterSpacing}" PlaceholderText="Favorite name" 
									KeyUp="FavoriteNameTextBox_KeyUp" VerticalAlignment="Center" Margin="3,0" FontFamily="Global User Interface"/>
								<Button Click="FavoriteNameButtonOk_Click" Content="Ok" Margin="0" Grid.Column="1" Style="{StaticResource SimpleButton}" FontFamily="Global User Interface"/>
							</Grid>
							
					</StackPanel>

							</Flyout>
						</Button.Flyout>
					<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="80
								"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<TextBlock HorizontalAlignment="Left" 
								TextWrapping="Wrap" 
								Text="&#xE113;"
								VerticalAlignment="Center" 
								FontFamily="Segoe UI Symbol" 
								FontSize="32" Margin="15,0"
						/>
							<StackPanel Grid.Column="2">
								<TextBlock Text="Add to favorites" FontSize="{StaticResource TextStyleExtraLargeFontSize}"/>
								<TextBlock Text="Store a personal location" FontSize="{StaticResource TextStyleLargeFontSize}" Style="{StaticResource ListViewItemSubheaderTextBlockStyle}"/>

							</StackPanel>

						</Grid>

					</Button>
					
					</StackPanel>
					
					</Flyout>
    	</FlyoutBase.AttachedFlyout>
    	<VisualStateManager.VisualStateGroups>
    		<VisualStateGroup x:Name="Search">
    			<VisualState x:Name="Normal"/>
    			<VisualState x:Name="SearchHidden">
    				
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBox.Text)" Storyboard.TargetName="SearchTextBox">
    						<DiscreteObjectKeyFrame KeyTime="0" Value=""/>
    					</ObjectAnimationUsingKeyFrames>
    				</Storyboard>
    				
    			</VisualState>
    			<VisualState x:Name="SearchVisible">
				<Storyboard>
    					<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="grid">
    						<DiscreteObjectKeyFrame KeyTime="0">
    							<DiscreteObjectKeyFrame.Value>
    								<x:Boolean>True</x:Boolean>
    							</DiscreteObjectKeyFrame.Value>
    						</DiscreteObjectKeyFrame>
    					</ObjectAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SearchStatusTextBlock">
    						<DiscreteObjectKeyFrame KeyTime="0">
    							<DiscreteObjectKeyFrame.Value>
    								<Visibility>Visible</Visibility>
    							</DiscreteObjectKeyFrame.Value>
    						</DiscreteObjectKeyFrame>
    					</ObjectAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SearchingProgressBar">
    						<DiscreteObjectKeyFrame KeyTime="0">
    							<DiscreteObjectKeyFrame.Value>
    								<Visibility>Collapsed</Visibility>
    							</DiscreteObjectKeyFrame.Value>
    						</DiscreteObjectKeyFrame>
    					</ObjectAnimationUsingKeyFrames>
    					<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GreyPanel" d:IsOptimized="True"/>
    					
    				</Storyboard>
					</VisualState>
    			<VisualState x:Name="Searching">
    				<Storyboard>
    					<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="grid">
    						<DiscreteObjectKeyFrame KeyTime="0">
    							<DiscreteObjectKeyFrame.Value>
    								<x:Boolean>True</x:Boolean>
    							</DiscreteObjectKeyFrame.Value>
    						</DiscreteObjectKeyFrame>
    					</ObjectAnimationUsingKeyFrames>
    					
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SearchStatusTextBlock">
    						<DiscreteObjectKeyFrame KeyTime="0">
    							<DiscreteObjectKeyFrame.Value>
    								<Visibility>Visible</Visibility>
    							</DiscreteObjectKeyFrame.Value>
    						</DiscreteObjectKeyFrame>
    					</ObjectAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Text)" Storyboard.TargetName="SearchStatusTextBlock">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="Searching..."/>
    					</ObjectAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SearchingProgressBar">
    						<DiscreteObjectKeyFrame KeyTime="0">
    							<DiscreteObjectKeyFrame.Value>
    								<Visibility>Visible</Visibility>
    							</DiscreteObjectKeyFrame.Value>
    						</DiscreteObjectKeyFrame>
    					</ObjectAnimationUsingKeyFrames>
    					<DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GreyPanel" d:IsOptimized="True"/>
    				</Storyboard>
    			</VisualState>
    		</VisualStateGroup>
    		<VisualStateGroup x:Name="VisualStateGroup">
    			<VisualState x:Name="NorthIndicatorVisible">
    				<Storyboard>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NorthIndicator">
    						<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
    						<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
    						<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
    					</DoubleAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="NorthIndicator">
    						<DiscreteObjectKeyFrame KeyTime="0">
    							<DiscreteObjectKeyFrame.Value>
    								<x:Boolean>True</x:Boolean>
    							</DiscreteObjectKeyFrame.Value>
    						</DiscreteObjectKeyFrame>
    					</ObjectAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="NorthIndicatorHidden">
    				<Storyboard>
    					<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NorthIndicator" d:IsOptimized="True"/>
    				</Storyboard>
    			</VisualState>
    		</VisualStateGroup>
    		<VisualStateGroup x:Name="VisualStateGroup1">
    			<VisualState x:Name="SearchLocationClear"/>
    			<VisualState x:Name="SearchLocationClick">
    				<Storyboard>
					
                    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="SearchLocationPoint">
                    				<EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0.85">
                    					<EasingDoubleKeyFrame.EasingFunction>
                    						<CircleEase EasingMode="EaseOut"/>
                    					</EasingDoubleKeyFrame.EasingFunction>
                    				</EasingDoubleKeyFrame>
                    				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                    					<EasingDoubleKeyFrame.EasingFunction>
                    						<BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                    					</EasingDoubleKeyFrame.EasingFunction>
                    				</EasingDoubleKeyFrame>
                    			</DoubleAnimationUsingKeyFrames>
                    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="SearchLocationPoint">
                    				<EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0.85">
                    					<EasingDoubleKeyFrame.EasingFunction>
                    						<CircleEase EasingMode="EaseOut"/>
                    					</EasingDoubleKeyFrame.EasingFunction>
                    				</EasingDoubleKeyFrame>
                    				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                    					<EasingDoubleKeyFrame.EasingFunction>
                    						<BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                    					</EasingDoubleKeyFrame.EasingFunction>
                    				</EasingDoubleKeyFrame>
                    			</DoubleAnimationUsingKeyFrames>


    				</Storyboard>
    			</VisualState>
    		</VisualStateGroup>
    		<VisualStateGroup x:Name="VisualStateGroup2">
    			<VisualState x:Name="SearchAddressPinSearching">
    				<Storyboard>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SearchingText">
    						<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
    						<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
    						<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
    					</DoubleAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="SearchingText">
    						<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-30"/>
    						<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
    							<EasingDoubleKeyFrame.EasingFunction>
    								<CircleEase EasingMode="EaseOut"/>
    							</EasingDoubleKeyFrame.EasingFunction>
    						</EasingDoubleKeyFrame>
    					</DoubleAnimationUsingKeyFrames>
    					<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SearchLocationText" d:IsOptimized="True"/>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontFamily)" Storyboard.TargetName="SearchingText">
    						<DiscreteObjectKeyFrame KeyTime="0">
    							<DiscreteObjectKeyFrame.Value>
    								<FontFamily>Global User Interface</FontFamily>
    							</DiscreteObjectKeyFrame.Value>
    						</DiscreteObjectKeyFrame>
    						<DiscreteObjectKeyFrame KeyTime="0:0:0.2">
    							<DiscreteObjectKeyFrame.Value>
    								<FontFamily>Global User Interface</FontFamily>
    							</DiscreteObjectKeyFrame.Value>
    						</DiscreteObjectKeyFrame>
    					</ObjectAnimationUsingKeyFrames>
    					
    					
    					
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="SearchAddressPinSearchedFinished">
    				<Storyboard>
    					<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SearchingText" d:IsOptimized="True"/>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SearchLocationText">
    						<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
    						<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
    					</DoubleAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="SearchLocationText">
    						<EasingDoubleKeyFrame KeyTime="0" Value="-30"/>
    						<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
    							<EasingDoubleKeyFrame.EasingFunction>
    								<CircleEase EasingMode="EaseOut"/>
    							</EasingDoubleKeyFrame.EasingFunction>
    						</EasingDoubleKeyFrame>
    					</DoubleAnimationUsingKeyFrames>
    					
    				</Storyboard>
    			</VisualState>
    		</VisualStateGroup>
    		<VisualStateGroup x:Name="VisualStateGroup3">
    			<VisualState x:Name="SearchLocationShow">
    				<Storyboard>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SearchLocationPoint">
    						<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
    						<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
    					</DoubleAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="SearchLocationPoint">
    						<EasingDoubleKeyFrame KeyTime="0" Value="0.85"/>
    						<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
    							<EasingDoubleKeyFrame.EasingFunction>
    								<BackEase EasingMode="EaseOut" Amplitude="0.5"/>
    							</EasingDoubleKeyFrame.EasingFunction>
    						</EasingDoubleKeyFrame>
    					</DoubleAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="SearchLocationPoint">
    						<EasingDoubleKeyFrame KeyTime="0" Value="0.85"/>
    						<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
    							<EasingDoubleKeyFrame.EasingFunction>
    								<BackEase EasingMode="EaseOut" Amplitude="0.5"/>
    							</EasingDoubleKeyFrame.EasingFunction>
    						</EasingDoubleKeyFrame>
    					</DoubleAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="SearchLocationPoint">
    						<DiscreteObjectKeyFrame KeyTime="0">
    							<DiscreteObjectKeyFrame.Value>
    								<x:Boolean>True</x:Boolean>
    							</DiscreteObjectKeyFrame.Value>
    						</DiscreteObjectKeyFrame>
    					</ObjectAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="SearchLocationHide"/>
    		</VisualStateGroup>
    	</VisualStateManager.VisualStateGroups>
			
    	<Maps:MapControl x:Name="MapCtrl"
    		LandmarksVisible="True"
    		MapServiceToken="AkVm6BZviS25-7mLQNpXUKvwcY3PxZsY7drDLo_QHRUao3xwbyEUsH2T7sOhXdWo" FontFamily="Global User Interface" PedestrianFeaturesVisible="True" Background="{x:Null}" ManipulationMode="All" ScrollViewer.VerticalScrollBarVisibility="Disabled" Opacity="1" IsHitTestVisible="True" IsDoubleTapEnabled="False"
           >
    		<Border x:Name="TouchPanel" ManipulationMode="All" Background="#00000000" Width="1000" Height="1000"/>
    		<Canvas x:Name="UserLocation" 
    			Maps:MapControl.NormalizedAnchorPoint="0.5,0.5" 
    			Width="26" Height="24" Opacity="0" 
    			RenderTransformOrigin="0.5,0.5" IsHitTestVisible="False">
    			<Canvas.RenderTransform>
    				<CompositeTransform Rotation="0"/>
    			</Canvas.RenderTransform>
			  
    			<Path Data="M12.978,0.5 L24.3847,22.832 L24.3958,22.8558 C25.1051,24.4247 25.5,26.1662 25.5,28 C25.5,34.9036 19.9036,40.5 13,40.5 C6.09644,40.5 0.5,34.9036 0.5,28 C0.5,26.2741 0.849777,24.6299 1.48231,23.1344 L1.52754,23.031 z" Fill="Black" HorizontalAlignment="Center" Height="41" RenderTransformOrigin="0.5,0.286976" Stretch="Fill" Stroke="White" UseLayoutRounding="False" VerticalAlignment="Center" Width="26" Canvas.Top="-16"/>
    			<Ellipse Fill="{ThemeResource PhoneAccentBrush}" 
    				Width="20" Height="20" Stroke="White" StrokeThickness="2" Canvas.Top="2" Canvas.Left="3" 
				/>
    		</Canvas>
        

    		<!--<Maps:MapItemsControl x:Name="MapItzems" ItemTemplate="{StaticResource EventPoiTemplate}" />-->

    	</Maps:MapControl>
			
    	<Canvas x:Name="SearchLocationPoint" RenderTransformOrigin="0,0" 
		 Opacity="0" 
		Maps:MapControl.NormalizedAnchorPoint="0.5,1" Tapped="SearchLocationPoint_Tapped" Margin="0" IsHitTestVisible="False" ManipulationStarting="SearchLocationPoint_ManipulationStarting" ManipulationMode="All" >
    		<Canvas.RenderTransform>
    			<CompositeTransform/>
    		</Canvas.RenderTransform>


    		<Image x:Name="image" Height="10" Width="32" Source="Assets/ombre.png" Canvas.Top="-5" Canvas.Left="-16" Opacity="0.6" IsHitTestVisible="False"/>
    		<Path Data="M28.6295,13.5002 L44.2042,13.5002 L36.4169,21.2875 z" Stretch="Fill" UseLayoutRounding="False" Fill="#CC000000" Width="16" Height="9.295" Canvas.Left="-8" Canvas.Top="-10" IsHitTestVisible="False"/>


             
    		<Grid HorizontalAlignment="Left" Background="#CC000000" Canvas.Left="-100" Canvas.Top="-83" MinWidth="100" RenderTransformOrigin="0.5,0.5" Height="74" Width="200">
            		
    			<Grid.RenderTransform>
    				<CompositeTransform/>
    			</Grid.RenderTransform>
            		
    			<TextBlock x:Name="SearchLocationText" HorizontalAlignment="Center" TextWrapping="Wrap" Text="txt" VerticalAlignment="Center"  FontSize="18.667" MaxLines="3" Margin="3,0" RenderTransformOrigin="0.5,0.5" Foreground="White">
    				<TextBlock.RenderTransform>
    					<CompositeTransform/>
    				</TextBlock.RenderTransform>
    			</TextBlock>
    			<TextBlock x:Name="SearchingText" HorizontalAlignment="Center" TextWrapping="Wrap" 
    				Text="Searching..." VerticalAlignment="Center" FontSize="18.667" 
					RenderTransformOrigin="0.5,0.5" Foreground="White">
    				<TextBlock.RenderTransform>
    					<CompositeTransform/>
    				</TextBlock.RenderTransform>
    			</TextBlock>
    		</Grid>



    	</Canvas>
        

		<RadioButton x:Name="NorthIndicator" Style="{StaticResource RadioButtonStyle1}"
			GroupName="VelibParkingSwitch" IsChecked="True"
			Background="#BF000000" BorderBrush="{x:Null}" MinWidth="0"
			RenderTransformOrigin="0.5,0.5"  Margin="0,50,20,0" VerticalAlignment="Top" Width="60" Height="60" HorizontalAlignment="Right" Click="NorthIndicator_Click" Padding="0" FontFamily="Global User Interface" Opacity="0" IsHitTestVisible="False">

			<RadioButton.RenderTransform>
				<CompositeTransform Rotation="0"/>
			</RadioButton.RenderTransform>

			<Canvas HorizontalAlignment="Left" Height="36" Margin="0,0,0,4" VerticalAlignment="Top" Width="34">
			
				<TextBlock TextWrapping="Wrap" Text="N" FontSize="9.333" Canvas.Left="14" Canvas.Top="27" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"/>
				<Path Data="M17.4019,0 L35.1106,24.9999 L17.4811,16.1482 L0,24.6166 z" Fill="#CCFFFFFF" HorizontalAlignment="Center" Height="22" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" Width="22" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed" Canvas.Left="6.083" Canvas.Top="6.917"/>
				<Path Data="M6.6875,12.6437 L11.5156,17.5969 L23.9688,17.5969 z M2.34375,10.05 L28.3906,17.5969 L2.34375,25.1594 L9.5625,17.5969 z" Fill="White" Height="15.109" Canvas.Left="4" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Canvas.Top="11.72" UseLayoutRounding="False" Width="26.046">
					<Path.RenderTransform>
						<TransformGroup>
							<ScaleTransform/>
							<SkewTransform/>
							<RotateTransform Angle="-90"/>
							<TranslateTransform/>
						</TransformGroup>
					</Path.RenderTransform>
				</Path>
				
			</Canvas>
		</RadioButton>
            
			
    	<RadioButton x:Name="RadioButtonVelib" Style="{StaticResource RadioButtonStyle1}"
		GroupName="VelibParkingSwitch" IsChecked="True"
		Background="#BF000000" BorderBrush="{x:Null}" 
		Checked="RadioButtonVelib_Checked" MinWidth="0" Margin="16,0,68,20" VerticalAlignment="Bottom" Width="40" Height="40" HorizontalAlignment="Right" Visibility="Collapsed">
    		<Image Source="Assets/velo.png" Margin="7,0"/>
    	</RadioButton>
    	<RadioButton x:Name="RadioButtonParking"
		GroupName="VelibParkingSwitch"
		 Checked="RadioButtonParking_Checked" 
		 Margin="0,0,16,20" VerticalAlignment="Bottom"
		  Style="{StaticResource RadioButtonStyle1}" 
		  Background="#BF000000" BorderBrush="{x:Null}" MinWidth="0" Width="40" Height="40" HorizontalAlignment="Right" FontFamily="Global User Interface" Visibility="Collapsed">
		 	<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="P" VerticalAlignment="Center" Foreground="White" FontSize="26.667" FontFamily="Global User Interface" FontWeight="Bold" Margin="2,3,0,0"/>
			</RadioButton>
		<Border x:Name="GreyPanel" Background="Black" Width="1000" Height="1000" IsHitTestVisible="False" ManipulationMode="None" Opacity="0" RenderTransformOrigin="0.5,0.5">
			<Border.RenderTransform>
				<CompositeTransform/>
			</Border.RenderTransform>
		</Border>
    	<Grid x:Name="grid" VerticalAlignment="Top" IsHitTestVisible="False" Opacity="0">
    		<Grid.ColumnDefinitions>
    			<ColumnDefinition Width="*"/>
    			<ColumnDefinition Width="Auto"/>
    		</Grid.ColumnDefinitions>
    		<ProgressBar x:Name="SearchingProgressBar" Height="10" VerticalAlignment="Top" Grid.ColumnSpan="2" Visibility="Collapsed" IsIndeterminate="True"/>
    		<ScrollViewer x:Name="scrollViewer" VerticalAlignment="Top" Margin="10,0" >
    			<TextBox x:Name="SearchTextBox" VerticalAlignment="Center" PlaceholderText="address" FontFamily="Global User Interface" KeyUp="AddressTextBox_KeyUp"/>
    		</ScrollViewer>
    		<TextBlock x:Name="SearchStatusTextBlock" HorizontalAlignment="Left" 
    			
    			TextWrapping="Wrap" VerticalAlignment="Bottom" FontSize="16" Margin="10,55,0,0" IsHitTestVisible="False"/>
    	</Grid>
    	<ToggleButton x:Name="ToggleButtonVelibParking" 
		   HorizontalAlignment="Right" VerticalAlignment="Bottom" Style="{StaticResource ToggleButtonStyle1}" Background="#BD000000" MinWidth="0" MinHeight="0" BorderBrush="{x:Null}" FontFamily="Global User Interface" Margin="0,0,16,20" Click="ToggleButtonVelibParking_Click"/>
    </Grid>
</Page>
