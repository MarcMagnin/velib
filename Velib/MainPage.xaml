<Page
    x:Class="Velib.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Velib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:Velib.Data"
	xmlns:controls="using:Velib.VelibContext"
    xmlns:Maps="using:Windows.UI.Xaml.Controls.Maps"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    d:DataContext="{Binding Source={d:DesignData Source=/DataModel/SampleData.json, Type=data:SampleDataSource}}"
    mc:Ignorable="d" FontFamily="Global User Interface">

    <Page.Resources>
        
       
        <!--POIs-->
		      <ControlTemplate x:Key="VelibTemplate">
            <!--Maps:MapControl.NormalizedAnchorPoint="0.5,0"-->
            <Canvas x:Name="rootCanvas" Height="20" 
				
			
				Width="20" RenderTransformOrigin="0,0" >
                <Canvas.RenderTransform>
                    <CompositeTransform/>
                </Canvas.RenderTransform>


                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="VisualStateGroup">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0"/>
                            <VisualTransition From="Selected" GeneratedDuration="0:0:0.2">
                                <VisualTransition.GeneratedEasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </VisualTransition.GeneratedEasingFunction>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal">
                    		<Storyboard>
                        		<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                        		<DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image" d:IsOptimized="True"/>
                        		<DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                        	</Storyboard>
                    	</VisualState>
                        <VisualState x:Name="Selected">
                            <Storyboard>
                               
                        		<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="path" />
                        		<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="path" />
                                
                        		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="stackPanel">
                        			<DiscreteObjectKeyFrame KeyTime="0">
                        				<DiscreteObjectKeyFrame.Value>
                        					<Visibility>Visible</Visibility>
                        				</DiscreteObjectKeyFrame.Value>
                        			</DiscreteObjectKeyFrame>
                        		</ObjectAnimationUsingKeyFrames>
                        		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="stackPanel">
                        			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        			<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                        				<EasingDoubleKeyFrame.EasingFunction>
                        					<BackEase EasingMode="EaseOut" Amplitude="0.4"/>
                        				</EasingDoubleKeyFrame.EasingFunction>
                        			</EasingDoubleKeyFrame>
                        		</DoubleAnimationUsingKeyFrames>
                        		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="stackPanel">
                        			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        			<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                        				<EasingDoubleKeyFrame.EasingFunction>
                        					<BackEase EasingMode="EaseOut" Amplitude="0.4"/>
                        				</EasingDoubleKeyFrame.EasingFunction>
                        			</EasingDoubleKeyFrame>
                        		</DoubleAnimationUsingKeyFrames>
                        		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel">
                        			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        			<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                        		</DoubleAnimationUsingKeyFrames>
                        	</Storyboard>
                        </VisualState>
                        <VisualState x:Name="ShowGreenVelib">
                        	<Storyboard>
                        		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path_Copy" d:IsOptimized="True"/>
                        	</Storyboard>
                        </VisualState>
                        <VisualState x:Name="ShowCluster">
                        	<Storyboard>
                        		<DoubleAnimation Duration="0" To="1.3" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                        		<DoubleAnimation Duration="0" To="1.3" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                        		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Top)" Storyboard.TargetName="path">
                        			<DiscreteObjectKeyFrame KeyTime="0">
                        				<DiscreteObjectKeyFrame.Value>
                        					<x:Double>-55</x:Double>
                        				</DiscreteObjectKeyFrame.Value>
                        			</DiscreteObjectKeyFrame>
                        		</ObjectAnimationUsingKeyFrames>
                        		<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                        		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlockClusterNumber" d:IsOptimized="True"/>
                        	</Storyboard>
                        </VisualState>
                        <VisualState x:Name="ShowOrangeVelib">
                        	<Storyboard>
                        		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path_Copy1" d:IsOptimized="True"/>
                        	</Storyboard>
                        </VisualState>
                        <VisualState x:Name="ShowRedVelib">
                        	<Storyboard>
                        		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path_Copy2" d:IsOptimized="True"/>
                        	</Storyboard>
                        </VisualState>
                       
                    
						 
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="VisualStateGroup1">
					 <VisualState x:Name="Hide">
                        	<Storyboard>
					 		<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rootCanvas" d:IsOptimized="True"/>
					 		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="rootCanvas">
					 			<DiscreteObjectKeyFrame KeyTime="0">
					 				<DiscreteObjectKeyFrame.Value>
					 					<x:Boolean>False</x:Boolean>
					 				</DiscreteObjectKeyFrame.Value>
					 			</DiscreteObjectKeyFrame>
					 		</ObjectAnimationUsingKeyFrames>
					 	</Storyboard>
                        </VisualState>
                    	<VisualState x:Name="Loaded">
                    		<Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="rootCanvas">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <BackEase EasingMode="EaseOut" Amplitude="0.4"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="rootCanvas">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <BackEase EasingMode="EaseOut" Amplitude="0.4"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard></VisualState>
                    	<VisualState x:Name="Clear"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>


                <!--<Grid Visibility="{Binding SelectedFlagVisibility}" IsHitTestVisible="False" Height="30" Canvas.Left="42" Canvas.Top="-10" >
                <Ellipse Fill="Black" Stroke="#FF09C203" Margin="0" StrokeThickness="3"/>
                <TextBlock Height="30" 
        			Text="{Binding pa}" VerticalAlignment="Center" 
                    Foreground="{StaticResource PhoneAccentBrush}" Margin="6,3,6,0" HorizontalAlignment="Center"  />
            </Grid>-->



                <Image x:Name="image" Height="10" Width="32" Source="Assets/ombre.png" Canvas.Top="-5" Canvas.Left="-16" Opacity="0.6"/>
                <Path x:Name="path" Data="M89.9999,1 C94.8623,1 99.7249,2.85498 103.435,6.56496 C110.043,13.1734 110.059,24.1457 104.896,31.554 L103.435,33.4349 L89.9999,46.87 L76.2225,33.0838 C69.1468,25.6402 69.261,13.869 76.5649,6.56496 C80.2749,2.85498 85.1374,1 89.9999,1 z" Fill="#FF9B9B9B" Height="47.87" Stretch="Fill" Canvas.Top="-47" UseLayoutRounding="False" Width="40" RenderTransformOrigin="0.5,0.5" Canvas.Left="-20.25">
                	<Path.RenderTransform>
                		<CompositeTransform/>
                	</Path.RenderTransform>
                </Path>
				  
				
<!--<Grid Visibility="{Binding SelectedFlagVisibility}" IsHitTestVisible="False" Height="30" Canvas.Left="42" Canvas.Top="-10" >
                <Ellipse Fill="Black" Stroke="#FF09C203" Margin="0" StrokeThickness="3"/>
                <TextBlock Height="30" 
        			Text="{Binding pa}" VerticalAlignment="Center" 
                    Foreground="{StaticResource PhoneAccentBrush}" Margin="6,3,6,0" HorizontalAlignment="Center"  />
            </Grid>-->
            	<Path x:Name="path_Copy" Data="M89.9999,1 C94.8623,1 99.7249,2.85498 103.435,6.56496 C110.043,13.1734 110.059,24.1457 104.896,31.554 L103.435,33.4349 L89.9999,46.87 L76.2225,33.0838 C69.1468,25.6402 69.261,13.869 76.5649,6.56496 C80.2749,2.85498 85.1374,1 89.9999,1 z" Fill="#FF5ECF00" Height="47.87" Stretch="Fill" Canvas.Top="-47" UseLayoutRounding="False" Width="40" RenderTransformOrigin="0.5,0.5" Canvas.Left="-20.25" Opacity="0">
            		<Path.RenderTransform>
            			<CompositeTransform/>
            		</Path.RenderTransform>
            	</Path>
            	<Path x:Name="path_Copy1" Data="M89.9999,1 C94.8623,1 99.7249,2.85498 103.435,6.56496 C110.043,13.1734 110.059,24.1457 104.896,31.554 L103.435,33.4349 L89.9999,46.87 L76.2225,33.0838 C69.1468,25.6402 69.261,13.869 76.5649,6.56496 C80.2749,2.85498 85.1374,1 89.9999,1 z" Fill="#FFF5BE00" Height="47.87" Stretch="Fill" Canvas.Top="-47" UseLayoutRounding="False" Width="40" RenderTransformOrigin="0.5,0.5" Canvas.Left="-20.25" Opacity="0">
            		<Path.RenderTransform>
            			<CompositeTransform/>
            		</Path.RenderTransform>
            	</Path>
            	<Path x:Name="path_Copy2" Data="M89.9999,1 C94.8623,1 99.7249,2.85498 103.435,6.56496 C110.043,13.1734 110.059,24.1457 104.896,31.554 L103.435,33.4349 L89.9999,46.87 L76.2225,33.0838 C69.1468,25.6402 69.261,13.869 76.5649,6.56496 C80.2749,2.85498 85.1374,1 89.9999,1 z" Fill="#FFCF3800" Height="47.87" Stretch="Fill" Canvas.Top="-47" UseLayoutRounding="False" Width="40" RenderTransformOrigin="0.5,0.5" Canvas.Left="-20.25" Opacity="0">
            		<Path.RenderTransform>
            			<CompositeTransform/>
            		</Path.RenderTransform>
            	</Path>
<!--Binding AvailableBikesStr}-->
            	<TextBlock x:Name="textBlock" Text="{Binding AvailableStr}" 
            		VerticalAlignment="Center" 
            		FontSize="16" 
            		FontWeight="Bold" 
            		TextAlignment="Center" 
            		Canvas.Left="-11" Canvas.Top="-35" Width="23" 
            		IsColorFontEnabled="False" 
            		IsHitTestVisible="False" Foreground="Black" 
				/>
				<TextBlock x:Name="textBlockClusterNumber" 
            		VerticalAlignment="Center" 
            		FontSize="24" 
            		FontWeight="Bold" 
            		TextAlignment="Center" 
            		Canvas.Left="-17" Canvas.Top="-48" Width="34" 
            		IsColorFontEnabled="False" 
            		IsHitTestVisible="False" Foreground="White" Opacity="0" 
				/>


             
            	<Grid x:Name="stackPanel" HorizontalAlignment="Left" Background="#7F000000" Canvas.Left="-100" Canvas.Top="-80" MinWidth="100" RenderTransformOrigin="0.5,0.5" Height="74" Width="200" Margin="0" Visibility="Collapsed">
            		<Grid.ColumnDefinitions>
            			<ColumnDefinition Width="Auto"/>
            			<ColumnDefinition Width="*"/>
            			<ColumnDefinition Width="Auto"/>
            		</Grid.ColumnDefinitions>
            		<Grid.RenderTransform>
            			<CompositeTransform/>
            		</Grid.RenderTransform>
            		<!--Source="Assets/WP8AppbarIcons/audio.png"-->
                  
            		<RichTextBlock Grid.Column="1" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" HorizontalAlignment="Left" IsTextSelectionEnabled="False" IsColorFontEnabled="False" Margin="3,3,0,3">
            			<Paragraph>
            				<Run  FontSize="10"/>
            			</Paragraph>
            			<Paragraph>
            				<Run Text="Vélos disponibles :"  FontSize="12"/>
            				<Run  FontSize="15"/>
            			</Paragraph>
            		</RichTextBlock>
            		<Rectangle VerticalAlignment="Center" Height="45" Width="45" HorizontalAlignment="Center" Grid.Column="3" Fill="White" Margin="3"/>
            		<Path Data="M28.6295,13.5002 L44.2042,13.5002 L36.4169,21.2875 z" Stretch="Fill" UseLayoutRounding="False" Fill="#7F000000" Margin="91.856,73.993,41.311,-9.121" Grid.Column="1" Width="16"/>
            	</Grid>



            </Canvas>
        </ControlTemplate>

		<ControlTemplate x:Key="ClusterTemplate">
            <!--Maps:MapControl.NormalizedAnchorPoint="0.5,0"-->
            <Canvas x:Name="rootCanvas" Height="20" 
				
			
				Width="20" RenderTransformOrigin="0.5,0.5">
                <Canvas.RenderTransform>
                    <CompositeTransform/>
                </Canvas.RenderTransform>


                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="VisualStateGroup">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0"/>
                            <VisualTransition From="Selected" GeneratedDuration="0:0:0.2">
                                <VisualTransition.GeneratedEasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </VisualTransition.GeneratedEasingFunction>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="Selected">
                            <Storyboard>
                               
                        		<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="path" />
                        		<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="path" />
                                
                        		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="stackPanel">
                        			<DiscreteObjectKeyFrame KeyTime="0">
                        				<DiscreteObjectKeyFrame.Value>
                        					<Visibility>Visible</Visibility>
                        				</DiscreteObjectKeyFrame.Value>
                        			</DiscreteObjectKeyFrame>
                        		</ObjectAnimationUsingKeyFrames>
                        		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="stackPanel">
                        			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        			<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                        				<EasingDoubleKeyFrame.EasingFunction>
                        					<BackEase EasingMode="EaseOut" Amplitude="0.4"/>
                        				</EasingDoubleKeyFrame.EasingFunction>
                        			</EasingDoubleKeyFrame>
                        		</DoubleAnimationUsingKeyFrames>
                        		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="stackPanel">
                        			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        			<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                        				<EasingDoubleKeyFrame.EasingFunction>
                        					<BackEase EasingMode="EaseOut" Amplitude="0.4"/>
                        				</EasingDoubleKeyFrame.EasingFunction>
                        			</EasingDoubleKeyFrame>
                        		</DoubleAnimationUsingKeyFrames>
                        		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel">
                        			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        			<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                        		</DoubleAnimationUsingKeyFrames>
                        	</Storyboard>
                        </VisualState>
                        <VisualState x:Name="Loaded">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="rootCanvas">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <BackEase EasingMode="EaseOut" Amplitude="0.4"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="rootCanvas">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <BackEase EasingMode="EaseOut" Amplitude="0.4"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rootCanvas">
                                	<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                	<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="BeforeLoaded">
                        	<Storyboard>
                        		<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rootCanvas" />
                        	</Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>


                <!--<Grid Visibility="{Binding SelectedFlagVisibility}" IsHitTestVisible="False" Height="30" Canvas.Left="42" Canvas.Top="-10" >
                <Ellipse Fill="Black" Stroke="#FF09C203" Margin="0" StrokeThickness="3"/>
                <TextBlock Height="30" 
        			Text="{Binding pa}" VerticalAlignment="Center" 
                    Foreground="{StaticResource PhoneAccentBrush}" Margin="6,3,6,0" HorizontalAlignment="Center"  />
            </Grid>-->



                <Path x:Name="path" Data="M89.9999,1 C94.8623,1 99.7249,2.85498 103.435,6.56496 C110.043,13.1734 110.059,24.1457 104.896,31.554 L103.435,33.4349 L89.9999,46.87 L76.2225,33.0838 C69.1468,25.6402 69.261,13.869 76.5649,6.56496 C80.2749,2.85498 85.1374,1 89.9999,1 z" Fill="#4C000000" Height="47.87" Stretch="Fill" Stroke="Black" StrokeThickness="2" Canvas.Top="-47" UseLayoutRounding="False" Width="40" RenderTransformOrigin="0.5,0.5" Canvas.Left="-20.25">
                    <Path.RenderTransform>
                        <CompositeTransform/>
                    </Path.RenderTransform>
                </Path>
                <Grid Height="30" Width="30" Canvas.Left="-15" Canvas.Top="-42">
                	<TextBlock Text="{Binding count}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" FontWeight="Bold" TextAlignment="Center"/>
                </Grid>



             
                <Grid x:Name="stackPanel" HorizontalAlignment="Left" Background="#7F000000" Canvas.Left="-100" Canvas.Top="-80" MinWidth="100" RenderTransformOrigin="0.5,0.5" Height="74" Width="200" Margin="0" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RenderTransform>
                        <CompositeTransform/>
                    </Grid.RenderTransform>
                    <!--Source="Assets/WP8AppbarIcons/audio.png"-->
                  
                    <RichTextBlock Grid.Column="1" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" HorizontalAlignment="Left" IsTextSelectionEnabled="False" IsColorFontEnabled="False" Margin="3,3,0,3">
                         <Paragraph>
                            <Run Text="{Binding Address}"  FontSize="10"/>
                        </Paragraph>
						  <Paragraph>
						  <Run Text="Vélos disponibles :"  FontSize="12"/>
							<Run Text="{Binding AvailableBikesStr}"  FontSize="15"/>
                        </Paragraph>
                    </RichTextBlock>
                    <Rectangle VerticalAlignment="Center" Height="45" Width="45" HorizontalAlignment="Center" Grid.Column="3" Fill="White" Margin="3"/>
                    <Path Data="M28.6295,13.5002 L44.2042,13.5002 L36.4169,21.2875 z" Stretch="Fill" UseLayoutRounding="False" Fill="#7F000000" Margin="91.856,73.993,41.311,-9.121" Grid.Column="1" Width="16"/>
                </Grid>



            </Canvas>
        </ControlTemplate>

        <DataTemplate x:Key="EventPoiTemplate" >

            <!--<controls:VelibControl Template="{StaticResource VelibTemplate}" Tapped="VelibTapped" />-->
            <!--<StackPanel Background="Black"
            
            Tapped="EventTapped">
                <TextBlock Maps:MapControl.Location="{Binding Location}" 
                                       Text="{Binding Name}" 
                                        FontSize="20" Margin="5"/>
            </StackPanel>-->

        </DataTemplate>
        <SolidColorBrush x:Key="PhoneRadioCheckBoxBrush" Color="Transparent"/>
        <x:Double x:Key="TextStyleLargeFontSize">18.14</x:Double>
        <FontFamily x:Key="PhoneFontFamilyNormal">Segoe WP</FontFamily>
        <Thickness x:Key="CheckBoxAndRadioButtonTextPaddingThickness">8,0,0,0</Thickness>
        <x:Double x:Key="CheckBoxAndRadioButtonMinWidthSize">168</x:Double>
        <x:Double x:Key="PhoneStrokeThickness">2.5</x:Double>
        <Thickness x:Key="PhoneTouchTargetLargeOverhang">0,16</Thickness>
        <Style x:Key="VelibRadioButtonStyle" TargetType="RadioButton">
        	<Setter Property="Background" Value="{ThemeResource PhoneRadioCheckBoxBrush}"/>
        	<Setter Property="BorderBrush" Value="{ThemeResource PhoneRadioCheckBoxBorderBrush}"/>
        	<Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
        	<Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
        	<Setter Property="HorizontalContentAlignment" Value="Left"/>
        	<Setter Property="VerticalContentAlignment" Value="Top"/>
        	<Setter Property="HorizontalAlignment" Value="Left"/>
        	<Setter Property="VerticalAlignment" Value="Top"/>
        	<Setter Property="Padding" Value="{ThemeResource CheckBoxAndRadioButtonTextPaddingThickness}"/>
        	<Setter Property="MinWidth" Value="{ThemeResource CheckBoxAndRadioButtonMinWidthSize}"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="RadioButton">
        				<Grid Background="#BD060606">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="MouseOver"/>
        							<VisualState x:Name="PointerOver"/>
        							<VisualState x:Name="Pressed">
        								<Storyboard>
        									<PointerDownThemeAnimation Storyboard.TargetName="Container"/>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckBackground">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckMark">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="CheckBackground">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckMark">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="CheckStates">
        							<VisualState x:Name="Checked">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CheckMark">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Unchecked"/>
        							<VisualState x:Name="Indeterminate"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Grid x:Name="Container" Margin="{ThemeResource PhoneTouchTargetLargeOverhang}">
        						<Grid.ColumnDefinitions>
        							<ColumnDefinition Width="25.5"/>
        							<ColumnDefinition Width="*"/>
        						</Grid.ColumnDefinitions>
        						<Grid VerticalAlignment="Top">
        							<Image HorizontalAlignment="Left" Height="26" VerticalAlignment="Top" Width="26"/>
        							<Ellipse x:Name="CheckBackground" Fill="{TemplateBinding Background}" HorizontalAlignment="Left" Height="25.5" IsHitTestVisible="False" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{ThemeResource PhoneStrokeThickness}" VerticalAlignment="Center" Width="25.5"/>
        							<Ellipse x:Name="CheckMark" Fill="{ThemeResource PhoneRadioCheckBoxCheckBrush}" HorizontalAlignment="Center" Height="12.5" IsHitTestVisible="False" Visibility="Collapsed" VerticalAlignment="Center" Width="12.5"/>
        							<TextBlock/>
        						</Grid>
        						<ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        					</Grid>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    </Page.Resources>
	<Page.BottomAppBar>
		<CommandBar>
			<AppBarButton Icon="Target" Click="AppBarButton_Click" Label="Location"/>
		</CommandBar>
	</Page.BottomAppBar>

    <Grid x:Name="LayoutRoot">
            
			
    	<Maps:MapControl x:Name="MapCtrl"
    		MapTapped="MyMap_MapTapped"
    		LandmarksVisible="False"
    		MapServiceToken="AkVm6BZviS25-7mLQNpXUKvwcY3PxZsY7drDLo_QHRUao3xwbyEUsH2T7sOhXdWo" FontFamily="Global User Interface"
           >
    		<Canvas x:Name="UserLocation" Maps:MapControl.NormalizedAnchorPoint="0.5,0.5" Width="30" Height="30" Opacity="0">
    			<Ellipse Width="24" Height="24" StrokeThickness="3" Stroke="Black" />
    			<Ellipse Fill="{ThemeResource PhoneAccentBrush}" 
    				Width="20" Height="20" Canvas.Left="2" Canvas.Top="2" Stroke="White" StrokeThickness="2" 
				/>
    		</Canvas>
    		<!--<Maps:MapItemsControl x:Name="MapItzems" ItemTemplate="{StaticResource EventPoiTemplate}" />-->

    	</Maps:MapControl>
            
			
    	<RadioButton x:Name="RadioButtonVelib" Content="Velibs" GroupName="VelibParkingSwitch" IsChecked="True" Style="{StaticResource VelibRadioButtonStyle}" Checked="RadioButtonVelib_Checked"/>
    	<RadioButton x:Name="RadioButtonParking" Content="Parkings" GroupName="VelibParkingSwitch" Checked="RadioButtonParking_Checked" Margin="0,46,0,0"/>
    </Grid>
</Page>
